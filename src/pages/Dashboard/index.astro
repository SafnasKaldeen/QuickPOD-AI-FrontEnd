---
const query = Astro.params.query;

import GreetingTitle from "../../components/GreetingTitle.svelte";
import PageHeader from "../../components/PageHeader.astro";
import PlaylistCard from "../../components/PlaylistCard.astro";
import PlaylistItemCard from "../../components/PlaylistItemCard.astro";
import Layout from "../../layouts/Layout.astro";
import { playlists, morePlaylists } from "../../lib/data";
import SideMenu from "../../components/Side/SideMenu.astro";

const userName = "Safnas Kaldeen";
---

<div class="relative h-screen gap-2 flex items-stretch">
  <div class="w-[350px] flex-col hidden lg:flex overflow-y-auto">
    <SideMenu />
  </div>
  <div class="rounded-lg bg-zinc-900 flex-1 mx-auto overflow-y-auto">
    <Layout title="Home">
      <div
        id="playlist-container"
        class="relative transition-all duration-1000 bg-context"
        style="min-height:300px;--context-color:#134e4a;"
      >
        <PageHeader />
        <div class="relative z-10 px-6">
          <span>
            <GreetingTitle client:visible />
          </span>
          <div
            class="grid gap-y-4 gap-x-6 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 mt-6"
          >
            {
              playlists.map((playlist) => (
                <PlaylistItemCard playlist={playlist} />
              ))
            }
          </div>
        </div>
        <div
          class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80"
        >
        </div>
      </div>
      <div class="px-6 relative z-10 mt-4">
        <h2 class="text-2xl font-bold">Podcasts selected For you</h2>
        <div class="flex flex-wrap mt-6 gap-4">
          {morePlaylists.map((song) => <PlaylistCard song={song} />)}
        </div>
      </div>
    </Layout>
  </div>
</div>

<div
  id="not-support"
  class="fixed hidden bg-red-700 bottom-0 inset-x-0 rounded-t-md text-center py-2 lg:py-4 z-50 font-semibold"
>
  It seems your browser does not support view transitions yet :( try it using
  chrome or edge <a
    class="underline"
    href="https://github.com/igorm84/spotify-astro-transitions"
    >(see docs here)</a
  >
</div>
<script is:inline defer>
  function setContainerColor(dataColor) {
    const playlistContainer = document.getElementById("playlist-container");
    const currentColor = playlistContainer?.getAttribute("data-color");
    if (dataColor && dataColor !== currentColor) {
      playlistContainer?.style.setProperty("--context-color", dataColor);
      playlistContainer?.setAttribute("data-color", dataColor);
    }
  }

  window.coloradTimeout = null;
  for (const playlist of document.querySelectorAll(".playlist-item")) {
    playlist.addEventListener("mouseover", () => onMouseOverColorad(playlist));
    playlist.addEventListener("mouseout", onMouseOutColorad);
    playlist.addEventListener("focus", () => onMouseFocusColorad(playlist));
    playlist.addEventListener("blur", onMouseOutColorad);
  }

  function onMouseFocusColorad(el) {
    if (el) {
      const dataColor = el.getAttribute("data-color");
      if (!dataColor) return;
      setContainerColor(dataColor);
    }
  }
  function onMouseOverColorad(el) {
    if (el) {
      const dataColor = el.getAttribute("data-color");
      if (!dataColor) return;
      window.coloradTimeout = setTimeout(
        () => setContainerColor(dataColor),
        200
      );
    }
  }
  function onMouseOutColorad() {
    if (window.coloradTimeout) {
      clearTimeout(window.coloradTimeout);
      window.coloradTimeout = null;
    }
  }
</script>
<script>
  if (!document.startViewTransition) {
    document.getElementById("not-support").classList.remove("hidden");
  }
  document.addEventListener("astro:page-load", () => {
    for (const el of document.querySelectorAll(".el-to-fade")) {
      el.classList.remove("scale-90");
    }
  });
</script>
