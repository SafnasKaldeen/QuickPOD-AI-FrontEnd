---
import ProfileUpload from "./ProfileUpload.jsx";
---

<script>
  // Function to fetch and update profile data on page load
  document.addEventListener("DOMContentLoaded", async () => {
    try {
      const response = await fetch("http://127.0.0.1:8000/profile", {
        method: "GET",
        headers: {
          Accept: "application/json",
          Authorization:
            "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJzYWZuYXN0aGVncmVhdEBnbWFpbC5jb20iLCJleHAiOjE3MjAwMTY4Njd9.IDf0WPCtQ6YzVd2D2-rmXa44e3RpHhGHJQRlXJayTmQ",
        },
      });

      if (response.ok) {
        const profileData = await response.json();
        // Optionally alert specific profile fields
      } else {
        console.error("Failed to fetch profile data:", response.statusText);
      }
    } catch (error) {
      console.error("Error fetching profile data:", error);
    }
  });

  // Function to send updated profile data to the API
  const SaveChanges = document.getElementById("saveChanges");
  SaveChanges.addEventListener("click", updateProfileData);

  async function updateProfileData() {
    const botName = document.getElementById("botName").value;
    const voiceSelect = document.getElementById("voiceSelect").value;

    const data = {
      avatar_name: botName,
      avatar_voice: voiceSelect,
    };

    console.log(data);

    try {
      const response = await fetch("http://127.0.0.1:8000/profile/avatar", {
        method: "PUT",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
          Authorization:
            "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJzYWZuYXN0aGVncmVhdEBnbWFpbC5jb20iLCJleHAiOjE3MjAwMTY4Njd9.IDf0WPCtQ6YzVd2D2-rmXa44e3RpHhGHJQRlXJayTmQ",
        },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        console.log(
          "Profile data updated successfully:",
          await response.json()
        );
        alert("Profile data updated successfully!");
        // Optionally display a success message or perform further actions
      } else {
        console.error("Failed to update profile data:", response.statusText);
        // Optionally handle error cases
      }
    } catch (error) {
      console.error("Error updating profile data:", error);
    }
  }
</script>

<div class="grid grid-cols-1 lg:grid-cols-2 gap-4 mt-5">
  <div class="lg:col-span-1 p-4 border border-white">
    <ProfileUpload client:load />
  </div>
  <div class="lg:col-span-1 p-4 border border-white">
    <h1 class="text-3xl font-bold text-center text-gray-200">
      Select your AI Voice
    </h1>

    <select
      id="voiceSelect"
      class="form-select w-full px-4 py-2 mt-4 border border-gray-300 rounded text-white bg-sky-900/30"
    >
      <option selected disabled value="0">Select Voice</option>
      <option value="alloy">Alloy: Female</option>
      <option value="echo">Echo: Male</option>
      <option value="fable">Fable: Male (British)</option>
      <option value="onyx">Onyx: Male</option>
      <option value="nova">Nova: Female</option>
      <option value="shimmer">Shimmer: Female</option>
    </select>
    <img
      id="AI-img"
      src="/images/Ai.gif"
      alt="AI"
      class="w-1/2 h-1/2 object-cover rounded-full mx-auto mt-4 cursor-pointer opacity-20"
    />
    <form class="flex items-center justify-center mt-4">
      <input
        id="botName"
        type="text"
        class="form-input px-4 py-2 border border-gray-300 rounded text-white bg-sky-900 overflow-hidden"
        placeholder="Name your Bot"
      />

      <!-- Add additional input fields for other profile data -->
      <!-- Example: -->
      <!-- Ensure each input field has a unique ID and matches the field names in your data object -->
    </form>
    <button
      class="mt-4 px-4 py-2 bg-sky-900 text-white rounded hover:bg-sky-700 hover:border-sky-700 transition duration-300 ease-in-out"
      id="saveChanges"
    >
      Upload Avatar
    </button>
  </div>
</div>
