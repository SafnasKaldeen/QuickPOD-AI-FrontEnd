<script>
  import Cookies from "js-cookie";

  document.addEventListener("DOMContentLoaded", async function () {
    try {
      const response = await fetch("http://127.0.0.1:8000/profile", {
        method: "GET",
        headers: {
          Accept: "application/json",
          Authorization: "Bearer " + Cookies.get("access_token"),
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }

      const data = await response.json();
      document.getElementById("fullName").value =
        data.first_name + " " + data.last_name;
      document.getElementById("language").value = data.lang_code;
      document.getElementById("gender").value = data.gender;
      document.getElementById("country").value = data.country;
      document.getElementById("botName").value = data.avatar_name;
      document.getElementById("voiceSelect").value = data.avatar_voice;
    } catch (error) {
      console.error("Error fetching profile data:", error);
    }
  });

  document
    .getElementById("saveChanges")
    .addEventListener("click", async function () {
      const fullName = document.getElementById("fullName").value;
      const language = document.getElementById("language").value;
      const gender = document.getElementById("gender").value;
      const country = document.getElementById("country").value;
      const botName = document.getElementById("botName").value;
      const voice = document.getElementById("voiceSelect").value;

      const [firstName, lastName] = fullName.split(" ");

      try {
        const getResponse = await fetch("http://127.0.0.1:8000/profile", {
          method: "GET",
          headers: {
            Accept: "application/json",
            Authorization: "Bearer " + Cookies.get("access_token"),
          },
        });

        if (!getResponse.ok) {
          throw new Error(`HTTP error! Status: ${getResponse.status}`);
        }

        const profileData = await getResponse.json();
        // alert(profileData.interests);

        let Interests = [];

        const interests = profileData.interests.map((interest) =>
          Interests.push(interest.trim())
        );

        // alert(Interests);
        console.log("Interests:", Interests);
        console.log("Interests:", typeof Interests);

        const payload = {
          first_name: firstName || "",
          last_name: lastName || "",
          gender: gender || "",
          dob: "2000-04-30", // Make sure to include the 'dob' field as per your curl command
          country: country || "",
          lang_code: language || "",
          interest: Interests || ["empty"], // If interests are empty, default to ["string"]
          avatar_name: botName || "",
          avatar_voice: voice || "",
        };
        console.log("Payload:", payload);

        const response = await fetch("http://127.0.0.1:8000/profile", {
          method: "PUT",
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
            Authorization: "Bearer " + Cookies.get("access_token"),
          },
          body: JSON.stringify(payload),
        });

        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const result = await response.json();
        console.log("Profile updated successfully:", result);
        alert("Profile updated successfully!");
      } catch (error) {
        console.error("Error updating profile:", error);
      }
    });
</script>

<div class="container mx-auto p-4">
  <div class="main-body">
    <div class="grid gap-y-4 gap-x-6 sm:grid-cols-1 lg:grid-cols-2">
      <div class="px-4">
        <div class="card bg-transparent rounded-lg p-6">
          <div class="mb-4">
            <div class="flex items-center mb-2">
              <h6 class="mb-0 w-1/4 font-bold text-gray-200">Full Name</h6>
              <input
                id="fullName"
                type="text"
                class="form-input w-3/4 px-4 py-2 border border-gray-300 rounded bg-zinc-900 text-white rounded border border-gray-400"
                placeholder="Mr.Whatever"
              />
            </div>
          </div>
          <div class="mb-4">
            <div class="flex items-center mb-2">
              <h6 class="mb-0 w-1/4 font-bold text-gray-200">Language</h6>
              <input
                id="language"
                type="text"
                class="form-input w-3/4 px-4 py-2 border border-gray-300 rounded bg-zinc-900 text-white rounded border border-gray-400"
                placeholder="English"
              />
            </div>
          </div>
          <div class="mb-4">
            <div class="flex items-center mb-2">
              <h6 class="mb-0 w-1/4 text-gray-200 font-bold">Gender</h6>
              <select
                id="gender"
                class="form-select w-3/4 px-4 py-2 border border-gray-300 rounded bg-zinc-900 text-white rounded border border-gray-400"
              >
                <option value="male">Male</option>
                <option value="female">Female</option>
                <option value="rather_not_say">Rather Not say</option>
              </select>
            </div>
          </div>
          <div class="mb-4">
            <div class="flex items-center mb-2">
              <h6 class="mb-0 w-1/4 font-bold text-gray-200">Country</h6>
              <input
                id="country"
                type="text"
                class="form-input w-3/4 px-4 py-2  bg-zinc-900 text-white rounded border border-gray-400"
                placeholder="USA"
              />
            </div>
          </div>
          <div class="mb-4">
            <div class="flex items-center mb-2">
              <h6 class="mb-0 w-1/4 font-bold text-gray-200">Bot Name</h6>
              <input
                id="botName"
                type="text"
                class="form-input w-3/4 px-4 py-2  bg-zinc-900 text-white rounded border border-gray-400"
                placeholder="Siri"
              />
            </div>
          </div>
          <div class="flex items-center">
            <div class="w-1/4"></div>
            <div class="w-3/4">
              <input
                type="button"
                id="saveChanges"
                class="btn btn-primary px-4 py-2 bg-primary text-black text-bold rounded"
                value="Save Changes"
              />
            </div>
          </div>
        </div>
      </div>
      <!-- Second Column for AI Voice Selection -->
      <div class="px-4 flex flex-col justify-center items-center">
        <div
          class="card bg-transparent rounded-lg p-2 w-full"
          style="width: 400px;"
        >
          <img
            src="/images/Ai.gif"
            alt="AI"
            class="w-full rounded-lg opacity-20"
            id="Gif"
          />
        </div>
        <select
          id="voiceSelect"
          class="form-select w-full px-4 py-2 mt-4  bg-zinc-900 text-white rounded border border-gray-400"
        >
          <option selected disabled value="0">Select Voice</option>
          <option value="alloy">Alloy: Female</option>
          <option value="echo">Echo: Male</option>
          <option value="fable">Fable: Male (British)</option>
          <option value="onyx">Onyx: Male</option>
          <option value="nova">Nova: Female</option>
          <option value="shimmer">Shimmer: Female</option>
        </select>

        <!-- Audio Element for Playing Selected Voice -->
        <audio id="voiceAudio" src=""></audio>

        <!-- JavaScript to Play Audio Based on Selected Option -->
        <script>
          document
            .getElementById("voiceSelect")
            .addEventListener("change", function () {
              const selectedValue = this.value;
              const audioElement = document.getElementById("voiceAudio");
              const Gif = document.getElementById("Gif");
              let audioSrc = "";

              switch (selectedValue) {
                case "alloy":
                  audioSrc = "/Audio/AI-Voices/alloy.mp3";
                  break;
                case "echo":
                  audioSrc = "/Audio/AI-Voices/echo.mp3";
                  break;
                case "fable":
                  audioSrc = "/Audio/AI-Voices/fable.mp3";
                  break;
                case "onyx":
                  audioSrc = "/Audio/AI-Voices/onyx.mp3";
                  break;
                case "nova":
                  audioSrc = "/Audio/AI-Voices/nova.mp3";
                  break;
                case "shimmer":
                  audioSrc = "/Audio/AI-Voices/shimmer.mp3";
                  break;
                default:
                  audioSrc = "";
              }

              if (audioSrc) {
                audioElement.src = audioSrc;
                Gif.classList.remove("opacity-20");
                audioElement.play();

                // Re-add the class once the audio is finished playing
                audioElement.addEventListener("ended", function () {
                  Gif.classList.add("opacity-20");
                });
              }
            });
        </script>
      </div>
    </div>
  </div>
</div>
